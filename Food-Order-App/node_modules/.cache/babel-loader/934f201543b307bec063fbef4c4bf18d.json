{"ast":null,"code":"var _jsxFileName = \"/Applications/ForDesktop/Udemy/React/Project/17-Practice-Project-Add-Http-form-to-App/Food-Order-App/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckingOut, setIsCheckingOut] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckingOut(true);\n  };\n\n  const submitOrderHandler = userData => {\n    fetch('https://react-food-order-app-52e8a-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user\n      })\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    _jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), isCheckingOut && /*#__PURE__*/_jsxDEV(Checkout, {\n        onCoonfirm: submitOrderHandler,\n        onCancel: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), !isCheckingOut && modalActions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this) // </div>\n\n  );\n};\n\n_s(Cart, \"vwVDON8H9O7WUsVyzaGsUNWaBbE=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Applications/ForDesktop/Udemy/React/Project/17-Practice-Project-Add-Http-form-to-App/Food-Order-App/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","classes","CartContext","CartItem","Checkout","Cart","props","isCheckingOut","setIsCheckingOut","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","cartItems","map","name","price","bind","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nconst Cart = (props) => {\n  const [isCheckingOut, setIsCheckingOut] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  const orderHandler = () => {\n    setIsCheckingOut(true);\n  };\n\n  const submitOrderHandler = (userData)=>{\n    fetch('https://react-food-order-app-52e8a-default-rtdb.firebaseio.com/orders.json',{\n      method:'POST',\n      body: JSON.stringify({user})\n    });\n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  return (\n    // <div>\n    <Modal onClose={props.onClose}>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {isCheckingOut && <Checkout onCoonfirm={submitOrderHandler}onCancel={props.onClose}/>}\n      {!isCheckingOut && modalActions}\n    </Modal>\n\n    // </div>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}